This is a mirror of http://www.vim.org/scripts/script.php?script_id=3279

ProjectParse is a plugin that analyzes several common project formats and creates entries for them for use with  Vim's `project` plugin.  ProjectParse currently supports the following project types:

    * Microsoft Visual Studio Projects and Solutions
    * Code::Blocks Projects and Workspaces
    * Automake Makefiles

One of the most popular plugins available for Vim, the `project` plugin vimscript #69 provides a mechanism for creating lists of files that makeup a project. Beyond just giving you a file listing, it provides some great functionality such as automatically opening your project files, grepping through each file in the list, and running arbitrary commands on these files.                

The project plugin creates a project by scanning through the user's filesystem for files that match a specified pattern.  This approach, while effective for some projects, isn't optimal for others.  Often, the filesystem may contain files that match the specified pattern but are not a part of the project (such as temporary files or older revisions of relevant files).  Also, when the user's filesystem is large, generating the list of files can be quite time-consuming (I've had projects with 1,500 relevant files in a directory of 30,000 files, where >28,000 files are analyzed unnecessarily).  Another problem is that by relying on a pre-configured file pattern, certain important files can be missed when they are not part of the configured pattern, especially as projects evolve.

Often, software developers already have a list of their relevant files in the form of a project for a well-known software tool like Microsoft Visual Studio. This is where ProjectParse enters.  ProjectParse is capable of analyzing project files for several popular software tools to automatically (and quickly) create a project for the `project` plugin.

By simply running the :ProjectParse command on a relevant file, a file listing will be added to a user's configuration for the `project` plugin and he or she can need not worry about whether any files have been missed (or added in error).
